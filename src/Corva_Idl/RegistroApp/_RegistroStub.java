package RegistroApp;


/**
* RegistroApp/_RegistroStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Registro.idl
* miércoles 8 de mayo de 2019 09:33:33 PM COT
*/

public class _RegistroStub extends org.omg.CORBA.portable.ObjectImpl implements RegistroApp.Registro
{

  public boolean insertarRegistro (String nombres, String apellidos, int tipo, String direccion, int identificacion, String telefono, String email, String rol, String contrasena)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("insertarRegistro", true);
                $out.write_wstring (nombres);
                $out.write_wstring (apellidos);
                $out.write_long (tipo);
                $out.write_wstring (direccion);
                $out.write_long (identificacion);
                $out.write_wstring (telefono);
                $out.write_wstring (email);
                $out.write_wstring (rol);
                $out.write_wstring (contrasena);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return insertarRegistro (nombres, apellidos, tipo, direccion, identificacion, telefono, email, rol, contrasena        );
            } finally {
                _releaseReply ($in);
            }
  } // insertarRegistro

  public boolean actualizarRegistro (String nombres, String apellidos, int tipo, String direccion, int identificacion, String telefono, String email, String rol, String contrasena)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("actualizarRegistro", true);
                $out.write_wstring (nombres);
                $out.write_wstring (apellidos);
                $out.write_long (tipo);
                $out.write_wstring (direccion);
                $out.write_long (identificacion);
                $out.write_wstring (telefono);
                $out.write_wstring (email);
                $out.write_wstring (rol);
                $out.write_wstring (contrasena);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return actualizarRegistro (nombres, apellidos, tipo, direccion, identificacion, telefono, email, rol, contrasena        );
            } finally {
                _releaseReply ($in);
            }
  } // actualizarRegistro

  public boolean eliminarRegistro (int identificacion)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("eliminarRegistro", true);
                $out.write_long (identificacion);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return eliminarRegistro (identificacion        );
            } finally {
                _releaseReply ($in);
            }
  } // eliminarRegistro

  public String consultarRegistro (int identificacion)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("consultarRegistro", true);
                $out.write_long (identificacion);
                $in = _invoke ($out);
                String $result = $in.read_wstring ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return consultarRegistro (identificacion        );
            } finally {
                _releaseReply ($in);
            }
  } // consultarRegistro

  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RegistroApp/Registro:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _RegistroStub
